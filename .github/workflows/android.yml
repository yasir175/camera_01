name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        run: |
          sudo apt update
          sudo apt install -y openjdk-11-jdk
          echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))" >> $GITHUB_ENV

      - name: Install Android SDK
        run: |
          sudo apt update
          sudo apt install -y android-sdk
          echo "ANDROID_HOME=/usr/lib/android-sdk" >> $GITHUB_ENV
          echo "PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV

      - name: Download and Install Android Command Line Tools
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip
          sudo mkdir -p $ANDROID_HOME/cmdline-tools
          sudo unzip commandlinetools-linux-6858069_latest.zip -d $ANDROID_HOME/cmdline-tools
          sudo mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV

      - name: Accept licenses and install build tools
        run: |
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
          yes | sdkmanager --licenses
          sdkmanager "build-tools;30.0.3"  # Explicitly install the required version
          sdkmanager "platform-tools" "platforms;android-30"

      - name: Install Buildozer and dependencies
        run: |
          sudo apt install -y python3-pip git
          pip install buildozer cython opencv-python numpy

      - name: Build APK
        run: |
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: myapp-debug.apk
          path: bin/*.apk
